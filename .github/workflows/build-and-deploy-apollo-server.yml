name: Build and deploy Apollo Server (/graphql-server)

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: "Image version"
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

#2
env:
  IMAGE_NAME: "lca-data-graphql-server"
  DOCKER_PORT: 4000
  SUBFOLDER: "graphql-server"

#3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $IMAGE_NAME):latest ./$(echo $SUBFOLDER)

      - name: Save the image to a tar.gz
        run: docker save $(echo $IMAGE_NAME):latest | gzip > server.tar.gz

      - name: Use SCP to push tar.gz to droplet
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_SSH_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          passphrase: ${{ secrets.DIGITALOCEAN_SSH_PASSPHRASE }}
          source: "server.tar.gz"
          target: /home/${{ secrets.DIGITALOCEAN_SSH_USERNAME }}/docker-images/

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_SSH_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          passphrase: ${{ secrets.DIGITALOCEAN_SSH_PASSPHRASE }}
          envs: IMAGE_NAME,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},DOCKER_PORT
          script: |
            # Stop running container
            docker stop $(echo $IMAGE_NAME)
            # Remove old container
            docker rm $(echo $IMAGE_NAME)
            # Remove old image
            docker rmi $(echo $IMAGE_NAME):latest
            # Load the image from the tar.gz
            docker load < /home/${{ secrets.DIGITALOCEAN_SSH_USERNAME }}/docker-images/server.tar.gz
            # Remove the tar.gz file
            rm /home/${{ secrets.DIGITALOCEAN_SSH_USERNAME }}/docker-images/server.tar.gz
